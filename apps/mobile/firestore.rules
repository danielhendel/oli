rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // USERS — per-user isolation
    match /users/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;

      match /{subcollection=profile|devices|permissions}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }

      match /logs/{logType}/{logId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }

      match /uploads/{uploadId} {
        allow read, write: if request.auth != null && request.auth.uid == uid;
      }

      match /facts/{aggType}/{aggId} {
        allow read: if request.auth != null && request.auth.uid == uid;
        allow write: if false;
      }

      match /analytics/{docId} {
        allow read: if request.auth != null && request.auth.uid == uid;
        allow write: if false;
      }

      match /insights/{docId} {
        allow read: if request.auth != null && request.auth.uid == uid;
        allow write: if false;
      }

      match /audit/{docId} {
        allow read: if request.auth != null && request.auth.uid == uid;
        allow write: if false;
      }
    }

    // EVENTS — append only
    match /events/{eventId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid == resource.data.uid;
      allow update, delete: if false;
    }

    // SHARES — owner-controlled
    match /shares/{shareId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerUid;
    }
  }
}

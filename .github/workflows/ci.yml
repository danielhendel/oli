name: CI
on:
  pull_request:
  push:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            services/api/package-lock.json

      # Install API deps
      - name: Install deps (services/api)
        run: npm ci
        working-directory: services/api

      # Typecheck (required)
      - name: Typecheck
        run: npm run typecheck
        working-directory: services/api

      # Lint (only if script exists)
      - name: Lint (if present)
        run: |
          if npm run | grep -E -q '^[[:space:]]+lint[[:space:]]'; then
            npm run lint
          else
            echo "No lint script; skipping"
          fi
        working-directory: services/api

      # Tests (only if script exists)
      - name: Test (if present)
        run: |
          if npm run | grep -E -q '^[[:space:]]+test[[:space:]]'; then
            npm test -- --ci
          else
            echo "No test script; skipping"
          fi
        working-directory: services/api

      # --- NEW: Prod Firebase health probe (only on pushes to main) ---
      - name: Install jq
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Probe Firebase health (prod)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          CLOUD_RUN_URL: ${{ secrets.CLOUD_RUN_URL }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Probing $CLOUD_RUN_URL/api/firebase/healthz"
          for i in {1..10}; do
            RESP="$(curl -fsS "$CLOUD_RUN_URL/api/firebase/healthz" || true)"
            echo "::group::Probe attempt $i"
            echo "$RESP"
            echo "::endgroup::"
            if echo "$RESP" | jq -e '.ok == true and (.firestore.exists == true)'; then
              echo "✅ Prod Firebase health probe passed."
              exit 0
            fi
            sleep 6
          done
          echo "❌ Prod Firebase health probe failed."
          exit 1
      - name: Probe Firebase health (prod)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          CLOUD_RUN_URL: ${{ secrets.CLOUD_RUN_URL }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Probing $CLOUD_RUN_URL/api/firebase/healthz"
          for i in {1..10}; do
            RESP="$(curl -fsS "$CLOUD_RUN_URL/api/firebase/healthz" || true)"
            echo "::group::Probe attempt $i"
            echo "$RESP"
            echo "::endgroup::"
            if echo "$RESP" | jq -e '.ok == true and (.firestore.exists == true)'; then
              echo "✅ Prod Firebase health probe passed."
              exit 0
            fi
            sleep 6
          done
          echo "❌ Prod Firebase health probe failed."
          exit 1

name: Healthz Probe (OIDC)

on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Cloud Run Deploy"]
    types: [completed]

jobs:
  probe:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      SERVICE_URL: https://healthos-api-zervimbdzq-uc.a.run.app
      SA_EMAIL: oli-ci-invoker@oli-backend.iam.gserviceaccount.com

    steps:
      - uses: actions/checkout@v4

      # Authenticate via WIF (access token flow) â€” NO 'audience' here.
      - id: auth
        name: Auth with GCP via WIF (access token)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/391788417686/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: ${{ env.SA_EMAIL }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # Mint ID token with correct Cloud Run audience and probe /healthz
      - name: Run OIDC health probe (gcloud -> Cloud Run)
        env:
          SERVICE_URL: ${{ env.SERVICE_URL }}
          SA_EMAIL: ${{ env.SA_EMAIL }}
        run: |
          set -euo pipefail
          echo "Minting ID token for audience: ${SERVICE_URL}"
          TOKEN="$(gcloud auth print-identity-token \
            --impersonate-service-account="${SA_EMAIL}" \
            --audiences="${SERVICE_URL}")"

          echo "Probing ${SERVICE_URL}/healthz ..."
          code="$(curl -sS --connect-timeout 5 --max-time 15 -o /dev/null -w '%{http_code}' \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/json" \
            "${SERVICE_URL}/healthz")"
          echo "HTTP ${code}"
          test "${code}" = "200"
          echo "Health probe OK"
